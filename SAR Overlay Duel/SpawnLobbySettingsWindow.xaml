<Window x:Class="SAR_Overlay_Duel.SpawnLobbySettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SAR_Overlay_Duel"
        mc:Ignorable="d"
        Title="SpawnLobbySettingsWindow" Height="50" Width="680" Topmost="True" WindowStyle="None" ResizeMode="NoResize" AllowsTransparency="True" Opacity="1">
    <Window.Resources>
        <ResourceDictionary>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
            <Style TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <!-- <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/> -->
                <Setter Property="Background" Value="#FF474747"/>
                <!-- <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/> -->
                <Setter Property="BorderBrush" Value="white"/>
                <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->
                <Setter Property="Foreground" Value="white"/>
                <Setter Property="BorderThickness" Value="3"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" CornerRadius="8" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.Background>
        <LinearGradientBrush EndPoint="0.0,0" StartPoint="1.0,0">
            <GradientStop Offset="0"/>
            <GradientStop Offset="0.7" Color="#7FFFFFFF"/>
            <GradientStop Color="#BFACD2EC" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition />
            <ColumnDefinition Width="50"/>

        </Grid.ColumnDefinitions>
        <Button HorizontalAlignment="Left" Margin="5,5,5,5"  Grid.Column="9"  Click="NextLobby">
            <Image Source="Resources/Arrow.png" Margin="3,0,0,0"/>
        </Button>
        <Button HorizontalAlignment="Left" Margin="5,5,5,5"  Grid.Column="0" Click="LastLobby">
            <Image Source="Resources/Arrow.png" RenderTransformOrigin="0.5,0.5" Margin="0,0,3,0">
                <Image.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-180"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Image.RenderTransform>
            </Image>
        </Button>

        <Button  Content="Start" HorizontalAlignment="Left" Margin="6,5,0,5" Grid.Column="6" Width="62" Click="StartSpawnClick"/>
        <Button  Content="Stop" HorizontalAlignment="Left" Margin="6,5,0,5" Grid.Column="5" Width="62"/>
        <Button  Content="Clear" HorizontalAlignment="Left" Margin="6,5,0,5"  Grid.Column="4" Width="62" Click="ClearSpawnClick"/>
        <Button  Content="Profile 1" HorizontalAlignment="Center" Margin="0,5,0,5"  Grid.Column="1" Width="62" Click="Profile1Click"/>
        <Button  Content="Profile 2" HorizontalAlignment="Left" Margin="6,5,0,5"  Grid.Column="2" Width="62" Click="Profile2Click"/>
        <Button  Content="Profile 3" HorizontalAlignment="Left" Margin="6,5,0,5"  Grid.Column="3" Width="62"/>
    </Grid>
</Window>
